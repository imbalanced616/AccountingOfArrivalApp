//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountingOfArrivalApp.Classes
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.CompilerServices;

    public partial class InvoicesOnArrival : INotifyPropertyChanged
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public InvoicesOnArrival()
        {
            this.CompositionsOfInvoice = new HashSet<CompositionsOfInvoice>();
        }
    
        public int idInvoice { get; set; }
        public Nullable<int> idCounterparty { get; set; }
        public Nullable<int> idUser { get; set; }
        private double amount;
        public double Amount
        {
            get
            {
                if (amount == 0)
                    foreach (CompositionsOfInvoice c in ClassHelper.db.CompositionsOfInvoice.Where(x => x.idInvoice == idInvoice))
                        amount += c.Amount;
                return amount;
            }
            set
            {
                amount = value;
                OnPropertyChanged("Amount");
            }
        }
        public Nullable<System.DateTime> DeliveryDate { get; set; }
        public Nullable<bool> DistributedInvoice { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CompositionsOfInvoice> CompositionsOfInvoice { get; set; }
        public virtual Counterparties Counterparties { get; set; }
        public virtual Users Users { get; set; }

        public event PropertyChangedEventHandler PropertyChanged;
        public void OnPropertyChanged([CallerMemberName] string prop = "") => PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(prop));

        public static List<InvoicesOnArrival> ToList()
        {
            return ClassHelper.db.InvoicesOnArrival.ToList();
        }
        public static List<InvoicesOnArrival> ToListBySearch(string search)
        {
            return ToList().Where(x => x.Counterparties.Name.ToLower().Contains(search) || x.Users.FIO.ToLower().Contains(search) || x.Amount.ToString().Contains(search) || x.DeliveryDate.ToString().Contains(search)).ToList();
        }
        public static int UpdateAtIdCounterparty(int id)
        {
            foreach (InvoicesOnArrival i in ClassHelper.db.InvoicesOnArrival.Where(x => x.idCounterparty == id).ToList()) i.idCounterparty = null;
            return ClassHelper.db.SaveChanges();
        }
        public static int UpdateAtIdUser(int id)
        {
            foreach (InvoicesOnArrival i in ClassHelper.db.InvoicesOnArrival.Where(x => x.idUser == id).ToList()) i.idUser = null;
            return ClassHelper.db.SaveChanges();
        }
    }
}
